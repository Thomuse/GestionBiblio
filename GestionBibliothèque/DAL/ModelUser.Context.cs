//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BibliothequeEntities : DbContext
    {
        public BibliothequeEntities()
            : base("name=BibliothequeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bibliotheque> Bibliotheque { get; set; }
        public virtual DbSet<Connection> Connection { get; set; }
        public virtual DbSet<Exemplaire> Exemplaire { get; set; }
        public virtual DbSet<Lecteur> Lecteur { get; set; }
        public virtual DbSet<Livre> Livre { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tarif> Tarif { get; set; }
        public virtual DbSet<Emprunt> Emprunt { get; set; }
        public virtual DbSet<Reservation> Reservation { get; set; }
    
        public virtual int Creation_Exemplaire(string code_Exemp, Nullable<bool> emprunte, Nullable<int> id_Biblio, Nullable<int> id_Livre)
        {
            var code_ExempParameter = code_Exemp != null ?
                new ObjectParameter("Code_Exemp", code_Exemp) :
                new ObjectParameter("Code_Exemp", typeof(string));
    
            var emprunteParameter = emprunte.HasValue ?
                new ObjectParameter("Emprunte", emprunte) :
                new ObjectParameter("Emprunte", typeof(bool));
    
            var id_BiblioParameter = id_Biblio.HasValue ?
                new ObjectParameter("Id_Biblio", id_Biblio) :
                new ObjectParameter("Id_Biblio", typeof(int));
    
            var id_LivreParameter = id_Livre.HasValue ?
                new ObjectParameter("Id_Livre", id_Livre) :
                new ObjectParameter("Id_Livre", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Creation_Exemplaire", code_ExempParameter, emprunteParameter, id_BiblioParameter, id_LivreParameter);
        }
    
        public virtual ObjectResult<Inscription_Biblio_Result> Inscription_Biblio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Inscription_Biblio_Result>("Inscription_Biblio");
        }
    
        public virtual ObjectResult<Jours_Emprunts_Result> Jours_Emprunts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Jours_Emprunts_Result>("Jours_Emprunts");
        }
    
        public virtual ObjectResult<Jours_EmpruntsByID_Result> Jours_EmpruntsByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Jours_EmpruntsByID_Result>("Jours_EmpruntsByID", iDParameter);
        }
    
        public virtual ObjectResult<string> List_Biblio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("List_Biblio");
        }
    
        public virtual ObjectResult<Liste_Emprunts_Result> Liste_Emprunts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Liste_Emprunts_Result>("Liste_Emprunts");
        }
    
        public virtual ObjectResult<Liste_EmpruntsAvecTarifs_Result> Liste_EmpruntsAvecTarifs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Liste_EmpruntsAvecTarifs_Result>("Liste_EmpruntsAvecTarifs");
        }
    
        public virtual ObjectResult<Liste_EmpruntsByID_Result> Liste_EmpruntsByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Liste_EmpruntsByID_Result>("Liste_EmpruntsByID", iDParameter);
        }
    
        public virtual ObjectResult<Liste_NbreLivresEmpruntéEtDansQuelleBiblio_Result> Liste_NbreLivresEmpruntéEtDansQuelleBiblio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Liste_NbreLivresEmpruntéEtDansQuelleBiblio_Result>("Liste_NbreLivresEmpruntéEtDansQuelleBiblio");
        }
    
        public virtual ObjectResult<Liste_Reservations_Result> Liste_Reservations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Liste_Reservations_Result>("Liste_Reservations");
        }
    
        public virtual ObjectResult<Liste_ReservationsbyID_Result> Liste_ReservationsbyID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Liste_ReservationsbyID_Result>("Liste_ReservationsbyID", iDParameter);
        }
    
        public virtual ObjectResult<Livres_DisposEtDansQuelleBiblio_Result> Livres_DisposEtDansQuelleBiblio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Livres_DisposEtDansQuelleBiblio_Result>("Livres_DisposEtDansQuelleBiblio");
        }
    
        public virtual ObjectResult<Livres_NbreEmpruntéParBiblio_Result> Livres_NbreEmpruntéParBiblio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Livres_NbreEmpruntéParBiblio_Result>("Livres_NbreEmpruntéParBiblio");
        }
    
        public virtual int Retour_livre(Nullable<int> idLecteur, Nullable<int> idExemp)
        {
            var idLecteurParameter = idLecteur.HasValue ?
                new ObjectParameter("IdLecteur", idLecteur) :
                new ObjectParameter("IdLecteur", typeof(int));
    
            var idExempParameter = idExemp.HasValue ?
                new ObjectParameter("IdExemp", idExemp) :
                new ObjectParameter("IdExemp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Retour_livre", idLecteurParameter, idExempParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
